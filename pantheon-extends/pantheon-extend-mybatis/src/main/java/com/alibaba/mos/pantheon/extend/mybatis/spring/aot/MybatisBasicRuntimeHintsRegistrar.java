package com.alibaba.mos.pantheon.extend.mybatis.spring.aot;import org.apache.ibatis.cache.impl.PerpetualCache;import org.apache.ibatis.javassist.util.proxy.ProxyFactory;import org.apache.ibatis.javassist.util.proxy.RuntimeSupport;import org.apache.ibatis.logging.Log;import org.apache.ibatis.logging.slf4j.Slf4jImpl;import org.apache.ibatis.scripting.defaults.RawLanguageDriver;import org.apache.ibatis.scripting.xmltags.XMLLanguageDriver;import org.apache.ibatis.session.SqlSessionFactory;import org.mybatis.spring.SqlSessionFactoryBean;import org.springframework.aot.hint.MemberCategory;import org.springframework.aot.hint.RuntimeHints;import org.springframework.aot.hint.RuntimeHintsRegistrar;import java.util.List;public class MybatisBasicRuntimeHintsRegistrar implements RuntimeHintsRegistrar {    public static final List<String> MYBATIS_XML_SCHEMES = List.of(            "org/apache/ibatis/builder/xml/*.dtd",            "org/apache/ibatis/builder/xml/*.xsd"    );    public static final List<Class<?>> MYBATIS_TYPES = List.of(            XMLLanguageDriver.class,            RawLanguageDriver.class,            RuntimeSupport.class,            ProxyFactory.class,            SqlSessionFactory.class,            SqlSessionFactoryBean.class,            PerpetualCache.class,            Log.class,            Slf4jImpl.class    );    @Override    public void registerHints(RuntimeHints hints, ClassLoader classLoader) {        MYBATIS_TYPES.forEach(o -> hints.reflection().registerType(o, MemberCategory.values()));        MYBATIS_XML_SCHEMES.forEach(hints.resources()::registerPattern);    }}